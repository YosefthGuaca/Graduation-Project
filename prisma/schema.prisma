// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  hashedPassword String
  type           AdminType @default(Reader)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model User {
  id                Int            @id @default(autoincrement())
  email             String         @unique
  username          String
  class             String?
  hashedPassword    String
  temporaryPassword String?
  emailSentAt       DateTime?
  type              UserType       @default(General)
  premiumStart      DateTime?
  premiumEnd        DateTime?
  provider          String?
  providerId        String?
  providerData      Json?
  profileFilename   String?
  profilePath       String?
  profileMimetype   String?
  profileSize       Int?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  firstLoginAt      DateTime?
  userLoginLogs     UserLoginLog[]
  assets            Asset[]
  websites          Website[]
  customDomains     CustomDomain[]
}

model UserLoginLog {
  id        Int      @id @default(autoincrement())
  ipAddress String
  userAgent String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Asset {
  id        Int      @id @default(autoincrement())
  filename  String
  path      String
  mimetype  String
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Website {
  id                 Int            @id @default(autoincrement())
  title              String
  slug               String         @unique
  faviconFilename    String?
  faviconPath        String?
  faviconMimetype    String?
  faviconSize        Int?
  googleAnalytics_id String?
  metaDescription    String?
  ogTitle            String?
  ogDescription      String?
  ogImageFilename    String?
  ogImagePath        String?
  ogImageMimetype    String?
  ogImageSize        Int?
  password           String?
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  user               User           @relation(fields: [userId], references: [id])
  userId             Int
  pages              Page[]
  customDomains      CustomDomain[]
}

model Page {
  id          Int        @id @default(autoincrement())
  slug        String
  status      PageStatus @default(Draft)
  content     Json?
  name        String
  publishedAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  website     Website    @relation(fields: [websiteId], references: [id])
  websiteId   Int
}

model Template {
  id        Int      @id @default(autoincrement())
  name      String
  path      String
  order     Int      @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomDomain {
  id          Int       @id @default(autoincrement())
  domain      String    @unique
  requestedAt DateTime?
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  website     Website   @relation(fields: [websiteId], references: [id])
  websiteId   Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

enum AdminType {
  Super
  Editor
  Reader
}

enum UserType {
  Admin
  General
}

enum PageStatus {
  Draft
  Published
  Archived
}

generator erd {
  provider    = "prisma-erd-generator"
  ignoreEnums = true
}
